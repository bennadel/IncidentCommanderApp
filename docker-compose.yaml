version: "2.4"

services:

  # CFML server.
  cfml:
    # Administrator / CFIDE:
    # - Url: http://127.0.0.1:8080/CFIDE/administrator/index.cfm
    # - Password: commandbox
    build:
      context: "./docker/cfml/"
      dockerfile: "Dockerfile"
    ports:
      - "80:8080"
      - "8080:8080"
    volumes:
      - "./app:/app"
      - "./docker/cfml/.cfconfig.json:/app/wwwroot/.cfconfig.json"
    environment:
      APP_DIR: "/app/wwwroot"
      BOX_SERVER_APP_CFENGINE: "adobe@2021.0.16+330307"
      BOX_SERVER_PROFILE: "development"
      CFPM_INSTALL: "debugger"
    depends_on:
      mysql:
        condition: "service_healthy"
    healthcheck:
      test: "echo hello"

  client:
    build:
      context: "./app/client/main/build/"
      dockerfile: "Dockerfile"
    image: "app.incident-commander.com/client:latest"
    command: [ "npm", "run", "build" ]
    volumes:
      - "./app/client/main/build:/app"
      # Mount the ColdFusion app for collocation of client files with the CFML views.
      - "./app/client/main:/app/src/cfml-main"
      # Save dist files into CFML volume where they can be consumed by the app.
      - "./app/wwwroot/client/main:/app/dist"
      # Makes sure we don't overwrite the node_modules in the build container.
      - "client_node_modules:/app/node_modules"

  client-dev:
    extends: "client"
    profiles:
      - "dev"
    command: [ "npm", "run", "watch" ]

  # MySQL server.
  mysql:
    build:
      context: "./docker/mysql/"
      dockerfile: "Dockerfile"
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "incident_commander"
      MYSQL_ROOT_PASSWORD: "password"
    volumes:
      # Initialization scripts, to be executed in alphabetical order.
      - "./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
      # Allow docker to manage the data persistence (MySQL doesn't work when you mount
      # the data on the host machine).
      - "incident_commander_mysql_data:/var/lib/mysql"
    healthcheck:
      test: "echo hello"

volumes:
  client_node_modules:
  incident_commander_mysql_data:
